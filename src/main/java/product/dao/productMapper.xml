<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="productSQL">
	<!-- 상품 번호 가져오기 -->
	<select id="getCurrentProductSeq" resultType="Integer">
		SELECT last_number
		FROM user_sequences
		WHERE sequence_name='SEQ_PRODUCT'
	</select>
	
	<!-- 상품 등록하기 -->
	<insert id="productRegist" parameterType="product">
		INSERT INTO product VALUES(seq_product.NEXTVAL,
								   #{mem_id},
								   #{cate_code},
								   #{product_subject},
								   #{product_content},
								   #{product_img1},
								   #{product_img2},
								   #{product_img3},
								   #{product_img4},
								   #{product_img5},
								   #{product_price},
								   #{product_location},
								   #{product_condition},
								   #{product_delivery_fee},
								   #{product_hashtag1},
								   #{product_hashtag2},
								   #{product_hashtag3},
								   #{product_hashtag4},
								   #{product_hashtag5},
								   0,
								   1,
								   SYSDATE)
	</insert>
	
	<!-- 소분류 카테고리 가져오기 -->
	<select id="getSmallCategoryList" parameterType="String" resultType="category">
		SELECT * FROM category WHERE cate_parent=#{cate_parent} ORDER BY cate_code
	</select>
	
	<!-- 내 주소 가져오기 -->
	<select id="getAddress" parameterType="String" resultType="String">
		SELECT mem_add1 FROM members WHERE mem_id=#{mem_id}
	</select>
	
	<!-- 내 최근 위치 가져오기 -->
	<select id="getRecentLocation" parameterType="String" resultType="String">
		SELECT mem_location FROM members WHERE mem_id=#{mem_id}
	</select>

	<select id="productDetail" parameterType="int" resultType="product">
		SELECT 
			product_seq,
			mem_id,
			cate_code,
			product_subject,
			product_content,
			product_img1,
			product_img2,
			product_img3,
			product_img4,
			product_img5,
			to_char(product_price, 'FM99,999,999') as product_price,
			product_location, 
			product_condition, 
			product_delivery_fee,
			product_hashtag1,
			product_hashtag2,
			product_hashtag3,
			product_hashtag4,
			product_hashtag5,
			product_view,
			product_manage,
			ROUND((sysdate-product_logtime)*24*60) as product_logtime
		FROM product WHERE product_seq=#{seq}
	</select>

	<!-- 연관상품 리스트 -->
	<select id="getRelatedProducts" parameterType="java.util.Map" resultType="product">
		select *
		from (select  rownum rn, tt.* from 
	         (select * 
	         from product
	         where cate_code = (select cate_code 
	         					from product 
	         					where product_seq = #{seq})
	         	   and product_manage=1
	         order by product_logtime desc)tt) 
		where rn between #{startNum} and #{endNum}
	</select>
	
	<!-- 상품정보 - 해당 카테고리 DTO  -->
	<select id="getProdCateName" parameterType="String" resultType="category">
		select cate_code, cate_name, cate_parent
		from product
		join category using(cate_code)
		where product_seq = #{seq}
	</select>
	
	<!-- seq로 상점 조회 -->
	<select id="getStoreInfo" parameterType="String" resultType="store">
		select mem_id, store_nickname, store_img, store_echo, store_scoreavg
		from store
		join product using(mem_id)
		where product_seq = #{seq}
	</select>
	
	<!-- 상점 물건 총 개수 -->
	<select id="getStoreProdNum" parameterType="String" resultType="int"> 
		select count(*)
		from product
		where mem_id = (select mem_id
		                from store
		                join product using(mem_id)
		                where product_seq = #{seq})
	</select>
	
	<!-- 상점주인이 올린 상품 2개 -->
	<select id="getStoreProduct" parameterType="String" resultType="product">
		select product_seq, mem_id, product_subject, product_content, product_img1, TO_CHAR(product_price, '999,999,999') as product_price, product_location, product_delivery_fee, product_manage, product_logtime
		from (select*
		      from product
		      where mem_id = (select mem_id
				              from store
				              join product using(mem_id)
				              where product_seq=26)
				              order by product_logtime desc)
		where rownum<![CDATA[<]]>3
	</select>
	
	<!-- 해당 상품이 찜 받은 수 -->
	<select id="getZzimNum" parameterType="String" resultType="int"> 
		select count(*)
		from wish
		where product_seq = #{seq}
	</select>
	
	<!-- 찜(+1) 업데이트  -->
	<insert id="zzimInsert" parameterType="java.util.Map">
		insert into wish values(#{mem_id}, #{seq}, sysdate)
	</insert>
	
	<!-- 찜(-1) 삭제  -->
	<insert id="zzimDelete" parameterType="java.util.Map">
		delete 
		from wish 
		where mem_id = #{mem_id} and product_seq = #{seq}
	</insert>
	
	
	
	<!-- 해당 상품의 대분류 이름 -->
	<select id="getProdBigCate" parameterType="String" resultType="String"> 
		select cate_name
		from category
		where cate_code = #{cate_code}
	</select>
	
	<!-- 찜 이미 했는지 확인 zzimExistCheck -->
	<select id="zzimExistCheck" parameterType="java.util.Map" resultType="index.bean.wishDTO"> 
		select*
		from wish
		where mem_id = #{mem_id} and product_seq = #{seq}
	</select>
	
	<!-- 게시물 조회수 업뎃  -->
	<update id="hitUpdate" parameterType="int">
		update product 
		set product_view = product_view+1 
		where product_seq=#{seq}
	</update>
	
	<!-- 상품 DTO 가져오기 -->
	<select id="getProductDTO" parameterType="String" resultType="product"> 
		SELECT * FROM product WHERE product_seq=#{product_seq}
	</select>
	
	<!-- 상품등록 시 멤버의 최근거래지역으로 설정 -->
	<update id="setRecentLocation">
		UPDATE members SET mem_location=#{recentLocation}
		WHERE mem_id=#{mem_id}
	</update>


</mapper>







